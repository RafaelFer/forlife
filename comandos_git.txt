Autor: Rafael

Comandos git:

git init      : Inicia um Repositório na pasta quem que o comando foi executado
git ls-files  : Mostra os arquivos controlados pelo git.
git status    : Lista todos os arquivos que estão sendo tradados e não pelo git, e suas modificações
git add       : adiciona arquivos no git (que podem ser commitados)
git commit -m : Commita no repositorio ( -m é para passar uma mensagem em  -m "Primeiro Commit")

git config user.name  : configura usuario para o git, se nao for global configura apenas para o repositorio presente
git config user.email : configura email para o git, se nao for global configura apenas para o repositorio presente

Obs1: Toda vez que voce adicionar um arquivo e comita-lo, caso faça alguma alteração, é preciso adiciona-lo novamente e para então commitar a alteração.

git log -p: Informa os logs dos commits, com dados do usuario, dados mensagens e tudo mais.
git whatchanged -p: Mesma idéia do Log só que com muitos mais detalhes. (-p Mostra os dados alterados em cada arquivo).
-p mostra as linhas que houveram modificacoes

#Remoto 
git remote : Lista os repositorios remotos
git remote add NOME URL : Adiciona um repositorio remote com o nome que vc escolher e passando o caminho do repositorio.

git clone URL : Faz donwload do repositorio online para sua maquina.

git push NOMEREPOSITORIO NOMEBRANCH : Commita os dados depois de adicionasdos e commitados no git, envia pa o repositorio.

git branch -a : lista todas as branchs remotas e nao

git branch -d : Deleta a branch, se for precisar forçar tem que usar o -D

git push -u nomerepositorio nomebranch : com -u criamos uma branch remota no e ja vinculamos ela a branch remota com mesmo nome

git push -d nomerepositorio nomebranch : deleta a branch remota

git fetch nomedorepositorio : este comando verifica todas as atualizações que foram realizadas no repositorio 

<<<<<<<<<<<<<<<<<<<<
sua

===============
dividao


>>>>>>>>>>>>>>>>>>>
repo

103ka90sdia9sdia0d rash

git mergetool --tool-help : Lista alguns programas para se fazer merge com interface gráfica
git mergetool -t nome_do_programa : para instalar o programa


Isso acontece quando gera conflito e o git não consegue fazer merge automatico, então é necessário a abertura do arquivo e o merge manual.	

git checkout -b nomedabranch : Cria uma branch e já muda para a branch criada.

#Trabalhando com branchs...Sempre crie uma nova branch, trabalhe nessa branch local, após commitar os dados volter para a branch master e faça o merge.

git merge nomedabranchQueDesejaFazerOMerger : quando vc estiver na master e utilzar este comando, ele vai fazer o merge com a branch que vc informar.

git rebase nomedabranchemaster nomedabranchedesenvolvimento : este comando tras os dados de uma branch master para uma branch filha, e atualiza a branch filha com todos os dados adicionados na branch pai.

Obs3: Quando voce está fazendo um rabase e acontece um conflito, o git cria uma branch temporaria chamada "no branch" para que voce possa tratar os conflitos.

O Comando rebase tem alguns outros comandos, são eles: --continue, --skip e --abort --continue deve ser utilizado após a resolução manual de conflitos; --skip faz com que suas alterações sejam descartadas; --abort volta atrás em todo o processo de rebase.


